# Modified version of Pantheon’s “wordpress-composer-managed” .gitignore
# https://github.com/pantheon-systems/wordpress-composer-managed/blob/default/.gitignore

# This file contains .gitignore rules that are often used with Composer-based
# WordPress projects. Because .gitignore is specific to your site and its
# deployment processes, you may need to uncomment, add, or remove rules.

# The /web/ directory is used in favor of /wp-content in a traditional
# WordPress project. This is where files are uploaded to, where plugins and
# themes are installed and where other writeable directories are created.
# Plugin, theme and mu-plugin paths are defined later and handled differently,
# but in most cases, we don't want to version control anything in here.
# It's unlikely that you would need to change any of these rules.
web/upgrade
web/uploads/*
!web/uploads/.gitkeep
web/cache/*

# WordPress is installed in web/wp so that it can be fully managed by Composer.
# This ensures that the WordPress directory is clean and doesn't contain any
# files other than those that come with the WordPress package.
web/wp
web/.htaccess

# Our Composer post-install command creates a symbolic link to web/wp inside
# web. We don't want to version control these linked files, so we ignore them
# explicitly.
web/license.txt
web/readme.html
web/index.php
web/wp-*
!web/wp-cli.yml
!web/wp-config.php
!web/wp-config-pantheon.php
web/xmlrpc.php

# Logfiles should always be ignored.
*.log

# Environment (.env) files should be ignored as they are generally personal.
# However, the .env.example and .env.pantheon files are left so that they can be
# viewed and modified. You should not store any credentials in your
# .env.pantheon file. Instead, those can go into environment-specific .env
# files. Constants saved in .env files will override those constants that are
# defined in wp-config-pantheon.php.
.env
.env.*
!.env.example
!.env.pantheon

# Generally you should only ignore the root vendor directory. These files are
# managed by Composer and should not be version controlled. It may be necessary
# to explicitly allow /vendor directories within plugins or themes that are not
# available through Wpackagist (which mirrors WordPress.org), like projects
# that pull from Packagist or custom GitHub repositories.
/vendor

# Any local WP-CLI rules should not be version controlled.
wp-cli.local.yml

# Threespot custom rules #
##########################
auth.json

# Note: VS Code files required for XDebug
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/php.ini
!.vscode/extensions.json
!.vscode/*.code-snippets

# Overrides to keep files
!web/wp-content/
web/wp-content/*

!web/wp-content/mu-plugins/
web/wp-content/mu-plugins/*
!web/wp-content/mu-plugins/.gitkeep

!web/wp-content/plugins/
web/wp-content/plugins/*
!web/wp-content/plugins/.gitkeep

!web/wp-content/themes
web/wp-content/themes/*
!web/wp-content/themes/.gitkeep

# Kepp Acorn cache folder
!web/wp-content/uploads
web/wp-content/uploads/*
!web/wp-content/uploads/cache
web/wp-content/uploads/cache/*
!web/wp-content/uploads/cache/.gitkeep
!web/wp-content/uploads/cache/

# Symlinks to Acorn cache folder
!web/cache
!web/wp-content/cache

# Object Cache Pro files
!web/wp-content/object-cache.php

# Include any mu-plugins not loaded via composer
!web/wp-content/mu-plugins/bedrock-autoloader.php
!web/wp-content/mu-plugins/custom-post-types
!web/wp-content/mu-plugins/custom-taxonomies

# Include any plugins not loaded via composer
!web/wp-content/plugins/fly-dynamic-image-resizer

# Keep custom theme folder
!web/wp-content/themes/sage

# :::::::::::::::::::::: Pantheon Additions ::::::::::::::::::::::

# Must-use plugins
# Ignore packages uploaded to mu-plugins by default. These area typically
# managed by composer as wordpress-muplugins. If you have custom mu-plugins,
# you will need to explicitly exclude them from this rule like this:
# !web/mu-plugins/my-muplugin/
# By default, individual mu-plugin files are not ignored, so any bare file in
# mu-plugins is version controlled. Exceptions to this rule are made to specific
# files managed by Composer.
web/mu-plugins/*/

# Plugins
# Ignore the plugins directory by default. WordPress plugins should be managed
# by Composer, where we have more control over the version constraints of the
# plugins. If you have custom plugins, you will need to explicitly exclude them
# from this rule like this:
# !web/plugins/my-plugin
web/plugins/*
!web/plugins/.gitkeep

# Themes
# We don't ignore all themes by default as these are most commonly where a
# bulk of a site's custom code may be. However, we do ignore all of the
# twenty-* themes by default. Any other Composer-managed themes should be
# added to this list.
web/themes/twenty*

# Other WordPress files and directories
# Any other files or directories that should not be version controlled go here.
# A lot of stuff from the non-Composer-managed WordPress upstream is repeated
# here.
web/backups/
web/backupwordpress-*/
web/blogs.dir/
web/backup-db/
web/cache/
web/managewp/backups/
web/updraft/
web/upgrade/
web/advanced-cache.php
web/wp-cache-config.php
web/wp-config-local.php
sitemap.xml
sitemap.xml.gz

# Private files
# We want to ignore files inside web/private/ by default, but we don't want to
# ignore the entire directory. The web/private/config directory is excluded from
# this rule because this may contain information that should be shared across
# environments and is not considered sensitive data. However, that exclusion
# should be removed if that is not the case.
!web/private/
web/private/*
!web/private/config/

# Autoloader
# This file loads the Composer autoloader and is moved to the root directory by
# pantheon-systems/composer-scaffold. This should not be moved or removed or it
# could prevent the site from working correctly.
/autoload.php

# Pantheon.upstream.yml
# Avoid accidental modification of pantheon.upstream.yml in sites
# created from this upstream
pantheon.upstream.yml

# Files
# Common files that should not be version controlled.
# Packages #
############
*.7z
*.dmg
*.gz
*.bz2
*.iso
*.jar
*.rar
*.tar
*.zip
*.tgz
!web/wp/wp-includes/**/*.gz

# Logs and databases #
######################
*.log
*.sql

# OS generated files #
######################
.DS_Store*
ehthumbs.db
Thumbs.db
._*

# Info on ignoring Icon? files
# https://stackoverflow.com/questions/17556250/how-to-ignore-icon-in-git
Icon[]

# Vim generated files #
######################
*.un~

# SASS #
##########
.sass-cache
